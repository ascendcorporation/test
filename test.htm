<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Scrollable ListView with Custom Column Widths</title>
    <style>
        /* Container for scrollable table */
        .table-container {
            height: 400px; /* Fixed height to show only 20 rows */
            overflow-y: auto;  /* Adds vertical scroll */
            width: 100%;
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }
        th, td {
            border: 1px solid #ddd;
            padding: 10px;
            text-align: left;
        }
        th {
            background-color: #f4f4f4;
        }

        /* Custom column widths */
        th:nth-child(1), td:nth-child(1) {
            width: 50px;  /* First column (e.g., Store Name) */
        }
        th:nth-child(2), td:nth-child(2) {
            width: 200px;  /* Second column (e.g., Location) */
        }
        th:nth-child(3), td:nth-child(3) {
            width: 50px;  /* Third column (e.g., Contact) */
        }
        /* Add more columns and adjust width as needed */
    </style>
</head>
<body>

    <h2>Dynamic Stores List</h2>

    <!-- Scrollable Table Container -->
    <div class="table-container">
        <table id="listView">
            <thead>
                <tr id="tableHead"></tr>
            </thead>
            <tbody id="tableBody">
            </tbody>
        </table>
    </div>

    <script>
        async function loadTSV() {
            try {
                // Fetch the tab-delimited file
                const response = await fetch("stores.txt");
                const tsvText = await response.text();

                // Split into rows
                const rows = tsvText.trim().split("\n");

                // Get table elements
                const tableHead = document.querySelector("#tableHead");
                const tableBody = document.querySelector("#tableBody");

                // Extract column names from first row
                const headers = rows[0].split("\t");
                tableHead.innerHTML = headers.map(header => `<th>${header}</th>`).join("");

                // Process all rows (skip the first header row)
                rows.slice(1).forEach(row => {
                    const cols = row.split("\t");
                    let tr = document.createElement("tr");
                    tr.innerHTML = cols.map(col => `<td>${col}</td>`).join("");
                    tableBody.appendChild(tr);
                });

            } catch (error) {
                console.error("Error loading TSV:", error);
            }
        }

        // Load the TSV file
        loadTSV();
    </script>

</body>
</html>