<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dynamic TSV ListView</title>
    <style>
        table {
            width: 100%;
            border-collapse: collapse;
        }
        th, td {
            border: 1px solid #ddd;
            padding: 10px;
            text-align: left;
        }
        th {
            background-color: #f4f4f4;
        }
    </style>
</head>
<body>

    <h2>Dynamic Stores List</h2>
    <table id="listView">
        <thead>
            <tr id="tableHead"></tr>
        </thead>
        <tbody id="tableBody">
        </tbody>
    </table>

    <script>
        async function loadTSV() {
            try {
                // Fetch the tab-delimited file
                const response = await fetch("stores.txt");
                const tsvText = await response.text();

                // Split into rows
                const rows = tsvText.trim().split("\n");

                // Get table elements
                const tableHead = document.querySelector("#tableHead");
                const tableBody = document.querySelector("#tableBody");

                // Extract column names from first row
                const headers = rows[0].split("\t");
                tableHead.innerHTML = headers.map(header => `<th>${header}</th>`).join("");

                // Process and append each row (skip headers)
                rows.slice(1).forEach(row => {
                    const cols = row.split("\t");
                    let tr = document.createElement("tr");
                    tr.innerHTML = cols.map(col => `<td>${col}</td>`).join("");
                    tableBody.appendChild(tr);
                });

            } catch (error) {
                console.error("Error loading TSV:", error);
            }
        }

        // Load the TSV file
        loadTSV();
    </script>

</body>
</html>